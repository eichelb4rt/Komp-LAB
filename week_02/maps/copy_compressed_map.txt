=== RESERVED ===
0  ->  start state
1  ->  state after copying, now go left
2  ->  simulation starts now
3  ->  simulation halted, let's clean up
4  ->  observed blank input
=== COPYING ===
5  ->  ('0', True)
6  ->  ('0', False)
7  ->  ('1', True)
8  ->  ('1', False)
=== READING ===
9   ->  (0, '1_')
10  ->  (0, '1 ')
11  ->  (0, '_ ')
12  ->  (0, '0_')
13  ->  (0, '  ')
14  ->  (0, '0 ')
15  ->  (0, '__')
16  ->  (0, ' _')
=== WRITING ===
17  ->  (0, (('0', <Directions.R: 'R'>), ('0', <Directions.R: 'R'>)))
18  ->  (<EndStates.HALT: 'h'>, (('_', <Directions.N: 'N'>), ('_', <Directions.N: 'N'>)))
19  ->  (0, (('1', <Directions.R: 'R'>), ('1', <Directions.R: 'R'>)))
=== MOVING RIGHT ===
20  ->  (<EndStates.HALT: 'h'>, (<Directions.N: 'N'>, <Directions.N: 'N'>), (False, False))
21  ->  (0, (<Directions.R: 'R'>, <Directions.R: 'R'>), (True, True))
22  ->  (0, (<Directions.R: 'R'>, <Directions.R: 'R'>), (True, False))
23  ->  (0, (<Directions.R: 'R'>, <Directions.R: 'R'>), (False, True))
24  ->  (0, (<Directions.R: 'R'>, <Directions.R: 'R'>), (False, False))
=== MOVING LEFT ===
25  ->  (<EndStates.HALT: 'h'>, (<Directions.N: 'N'>, <Directions.N: 'N'>), (False, False))
26  ->  (0, (<Directions.N: 'N'>, <Directions.N: 'N'>), (False, False))
=== CLEANUP ===
27  ->  0
28  ->  1
29  ->  _